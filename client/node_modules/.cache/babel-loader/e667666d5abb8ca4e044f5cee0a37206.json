{"ast":null,"code":"var _jsxFileName = \"/Users/eligottlieb/Documents/GitHub/calcutta/client/src/pages/Home.js\";\nimport React, { useState, useEffect } from 'react'; //import { Link } from \"react-router-dom\"; //look up react router dom for all the things you can import\n\nimport { PlayerCard } from '../components/PlayerCard';\nimport { TextInput } from '../components/TextInput';\nimport { MDBBtn } from 'mdb-react-ui-kit';\nimport Countdown from 'react-countdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  //getting basic data of all players\n  //const [data, setData] = useState([{}])\n  //const [oldPrice, setOldPrice] = useState([{}])\n  const playerID = 3; // useEffect(() => {\n  //   fetch(`/api/players/${playerID}/`).then(\n  //     res => res.json()\n  //   ).then(\n  //     data => {\n  //       setData(data)\n  //     }\n  //   )\n  // }, [playerID])\n  //could probably make this more efficient, try not to have two calls\n  //need to figure out how to make an immutable variable\n  // useEffect(() => {\n  //   fetch(`/api/players/${playerID}/`).then(\n  //     res => res.json()\n  //   ).then(\n  //     oldPrice => {\n  //       setOldPrice(oldPrice)\n  //     }\n  //   )\n  // }, [playerID])\n  //updating price of a player\n  // const [price, setPrice] = useState('')\n  // const handlePriceChange = (inputValue) => {\n  //   setPrice(inputValue)\n  // }\n  // const handleChange = (event) => {\n  //   handlePriceChange(event.target.value)\n  //   setData({...data, 'price':event.target.value})\n  //   console.log(data)\n  // }\n  // const handleFormSubmit = (e) => {\n  // e.preventDefault()\n  // const isGreater = (price > oldPrice.price)\n  // if (isGreater) {\n  // fetch(`/api/players/${playerID}/update/`, {\n  //   method: 'PUT',\n  //   body: JSON.stringify(\n  //     data\n  //   ),\n  //   headers: {\n  //     \"Content-type\": \"application/json\"\n  //   }\n  // }).then(\n  //   res => res.json()\n  // ).then(\n  //   oldPrice => {\n  //     setOldPrice(oldPrice)\n  //   }\n  // )}}\n  //to get a specific player\n  // fetch(`/api/notes/${noteId}/`)\n  //instead of empty list at the end of useEffect, pass in [noteId], this the dependency\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PlayerCard, {\n        player: oldPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        handleFormSubmit: handleFormSubmit,\n        price: price,\n        handleChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Countdown, {\n        date: Date.now() + 10000\n      }, 2, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","PlayerCard","TextInput","MDBBtn","Countdown","Home","playerID","oldPrice","handleFormSubmit","price","handleChange","Date","now"],"sources":["/Users/eligottlieb/Documents/GitHub/calcutta/client/src/pages/Home.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\n//import { Link } from \"react-router-dom\"; //look up react router dom for all the things you can import\nimport {PlayerCard} from '../components/PlayerCard'\nimport {TextInput} from '../components/TextInput'\nimport { MDBBtn } from 'mdb-react-ui-kit';\nimport Countdown from 'react-countdown'\n\nfunction Home() {\n\n  //getting basic data of all players\n\n  //const [data, setData] = useState([{}])\n  //const [oldPrice, setOldPrice] = useState([{}])\n\n\n  const playerID = 3\n\n  // useEffect(() => {\n  //   fetch(`/api/players/${playerID}/`).then(\n  //     res => res.json()\n  //   ).then(\n  //     data => {\n  //       setData(data)\n  //     }\n  //   )\n  // }, [playerID])\n\n  //could probably make this more efficient, try not to have two calls\n  //need to figure out how to make an immutable variable\n  // useEffect(() => {\n  //   fetch(`/api/players/${playerID}/`).then(\n  //     res => res.json()\n  //   ).then(\n  //     oldPrice => {\n  //       setOldPrice(oldPrice)\n  //     }\n  //   )\n  // }, [playerID])\n\n    //updating price of a player\n  // const [price, setPrice] = useState('')\n  // const handlePriceChange = (inputValue) => {\n  //   setPrice(inputValue)\n  // }\n\n  // const handleChange = (event) => {\n  //   handlePriceChange(event.target.value)\n  //   setData({...data, 'price':event.target.value})\n  //   console.log(data)\n  // }\n\n  // const handleFormSubmit = (e) => {\n  // e.preventDefault()\n  // const isGreater = (price > oldPrice.price)\n  // if (isGreater) {\n  // fetch(`/api/players/${playerID}/update/`, {\n  //   method: 'PUT',\n  //   body: JSON.stringify(\n  //     data\n  //   ),\n  //   headers: {\n  //     \"Content-type\": \"application/json\"\n  //   }\n  // }).then(\n  //   res => res.json()\n  // ).then(\n  //   oldPrice => {\n  //     setOldPrice(oldPrice)\n  //   }\n  // )}}\n\n\n  //to get a specific player\n  // fetch(`/api/notes/${noteId}/`)\n  //instead of empty list at the end of useEffect, pass in [noteId], this the dependency\n\n\n  return (\n    <>\n      <div>\n          <PlayerCard player = {oldPrice}/>\n          {/* <form onSubmit={handleFormSubmit}>\n              <label>Enter a price:</label>\n              <input className=\"inp\" required value={price} onChange={handleChange} type=\"number\" name=\"price\" autoComplete=\"off\"/>\n              <input type=\"submit\" value=\"BID\" />\n          </form> */}\n          <TextInput handleFormSubmit={handleFormSubmit} price={price} handleChange={handleChange}/>\n          <Countdown date={Date.now() + 10000} key = {2}/>\n          {/* <MDBBtn onClick={handleFormSubmit(playerID)} color=\"amber\">\n              BID\n          </MDBBtn> */}\n      </div>\n    </>\n  )\n}\n  \n  export default Home"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC,C,CACA;;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SAAQC,SAAR,QAAwB,yBAAxB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;;;AAEA,SAASC,IAAT,GAAgB;EAEd;EAEA;EACA;EAGA,MAAMC,QAAQ,GAAG,CAAjB,CARc,CAUd;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEE;EACF;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;;EAGA,oBACE;IAAA,uBACE;MAAA,wBACI,QAAC,UAAD;QAAY,MAAM,EAAIC;MAAtB;QAAA;QAAA;QAAA;MAAA,QADJ,eAOI,QAAC,SAAD;QAAW,gBAAgB,EAAEC,gBAA7B;QAA+C,KAAK,EAAEC,KAAtD;QAA6D,YAAY,EAAEC;MAA3E;QAAA;QAAA;QAAA;MAAA,QAPJ,eAQI,QAAC,SAAD;QAAW,IAAI,EAAEC,IAAI,CAACC,GAAL,KAAa;MAA9B,GAA4C,CAA5C;QAAA;QAAA;QAAA;MAAA,QARJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAiBD;;KAvFQP,I;AAyFP,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}