{"ast":null,"code":"var _jsxFileName = \"/Users/eligottlieb/Documents/GitHub/calcutta/client/src/pages/Home.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //import { Link } from \"react-router-dom\"; //look up react router dom for all the things you can import\n\nimport { PlayerCard } from '../components/PlayerCard';\nimport { MDBBtn } from 'mdb-react-ui-kit';\nimport Countdown from 'react-countdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  //getting basic data of all players\n  const [data, setData] = useState([{}]);\n  const [oldPrice, setOldPrice] = useState([{}]);\n  const playerID = 3;\n  useEffect(() => {\n    fetch(`/api/players/${playerID}/`).then(res => res.json()).then(data => {\n      setData(data);\n    });\n  }, [playerID]); //could probably make this more efficient, try not to have two calls\n  //need to figure out how to make an immutable variable\n\n  useEffect(() => {\n    fetch(`/api/players/${playerID}/`).then(res => res.json()).then(oldPrice => {\n      setOldPrice(oldPrice);\n    });\n  }, [playerID]); //to get a specific player\n  // fetch(`/api/notes/${noteId}/`)\n  //instead of empty list at the end of useEffect, pass in [noteId], this the dependency\n\n  const TextInput = () => {\n    _s();\n\n    //updating price of a player\n    const [price, setPrice] = useState('');\n\n    const handlePriceChange = inputValue => {\n      setPrice(inputValue);\n    };\n\n    const handleChange = event => {\n      handlePriceChange(event.target.value);\n      setData({ ...data,\n        'price': event.target.value\n      });\n      console.log(data);\n    };\n\n    const handleFormSubmit = e => {\n      e.preventDefault();\n      const isGreater = price > oldPrice.price;\n\n      if (isGreater) {\n        fetch(`/api/players/${playerID}/update/`, {\n          method: 'PUT',\n          body: JSON.stringify(data),\n          headers: {\n            \"Content-type\": \"application/json\"\n          }\n        }).then(res => res.json()).then(oldPrice => {\n          setOldPrice(oldPrice);\n        });\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter a price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inp\",\n          required: true,\n          value: price,\n          onChange: handleChange,\n          type: \"number\",\n          name: \"price\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"BID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  _s(TextInput, \"LxO4COykSxjSWuim4Q7Ko4v0qIE=\");\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PlayerCard, {\n        player: oldPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Countdown, {\n        date: Date.now() + 10000\n      }, 2, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s2(Home, \"qmz50Ofkd2IRb8+27XdHWnMQipQ=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","PlayerCard","MDBBtn","Countdown","Home","data","setData","oldPrice","setOldPrice","playerID","fetch","then","res","json","TextInput","price","setPrice","handlePriceChange","inputValue","handleChange","event","target","value","console","log","handleFormSubmit","e","preventDefault","isGreater","method","body","JSON","stringify","headers","Date","now"],"sources":["/Users/eligottlieb/Documents/GitHub/calcutta/client/src/pages/Home.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\n//import { Link } from \"react-router-dom\"; //look up react router dom for all the things you can import\nimport {PlayerCard} from '../components/PlayerCard'\nimport { MDBBtn } from 'mdb-react-ui-kit';\nimport Countdown from 'react-countdown'\n\nfunction Home() {\n\n  //getting basic data of all players\n  const [data, setData] = useState([{}])\n  const [oldPrice, setOldPrice] = useState([{}])\n\n\n  const playerID = 3\n\n  useEffect(() => {\n    fetch(`/api/players/${playerID}/`).then(\n      res => res.json()\n    ).then(\n      data => {\n        setData(data)\n      }\n    )\n  }, [playerID])\n\n  //could probably make this more efficient, try not to have two calls\n  //need to figure out how to make an immutable variable\n  useEffect(() => {\n    fetch(`/api/players/${playerID}/`).then(\n      res => res.json()\n    ).then(\n      oldPrice => {\n        setOldPrice(oldPrice)\n      }\n    )\n  }, [playerID])\n\n\n  //to get a specific player\n  // fetch(`/api/notes/${noteId}/`)\n  //instead of empty list at the end of useEffect, pass in [noteId], this the dependency\n\n\n\n  const TextInput = () => {\n  //updating price of a player\n  const [price, setPrice] = useState('')\n  const handlePriceChange = (inputValue) => {\n    setPrice(inputValue)\n  }\n\n  const handleChange = (event) => {\n    handlePriceChange(event.target.value)\n    setData({...data, 'price':event.target.value})\n    console.log(data)\n  }\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault()\n    const isGreater = (price > oldPrice.price)\n    if (isGreater) {\n    fetch(`/api/players/${playerID}/update/`, {\n      method: 'PUT',\n      body: JSON.stringify(\n        data\n      ),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(\n      res => res.json()\n    ).then(\n      oldPrice => {\n        setOldPrice(oldPrice)\n      }\n    )}}\n\n    return (\n      <>\n        <form onSubmit={handleFormSubmit}>\n          <label>Enter a price:</label>\n          <input className=\"inp\" required value={price} onChange={handleChange} type=\"number\" name=\"price\" autoComplete=\"off\"/>\n          <input type=\"submit\" value=\"BID\" />\n        </form>\n      </>\n    )}\n  \n\n\n\n  \n\n\n  return (\n    <>\n      <div>\n          <PlayerCard player = {oldPrice}/>\n          {/* <form onSubmit={handleFormSubmit}>\n              <label>Enter a price:</label>\n              <input className=\"inp\" required value={price} onChange={handleChange} type=\"number\" name=\"price\" autoComplete=\"off\"/>\n              <input type=\"submit\" value=\"BID\" />\n          </form> */}\n          <TextInput/>\n          <Countdown date={Date.now() + 10000} key = {2}/>\n          {/* <MDBBtn onClick={handleFormSubmit(playerID)} color=\"amber\">\n              BID\n          </MDBBtn> */}\n      </div>\n    </>\n  )\n}\n  \n  export default Home"],"mappings":"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"},"metadata":{},"sourceType":"module"}