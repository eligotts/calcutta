{"ast":null,"code":"var _jsxFileName = \"/Users/eligottlieb/Documents/GitHub/calcutta/client/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //import { Link } from \"react-router-dom\"; //look up react router dom for all the things you can import\n\nimport { PlayerCard } from '../components/PlayerCard';\nimport { TextInput } from '../components/TextInput';\nimport { MDBBtn } from 'mdb-react-ui-kit';\nimport Countdown from 'react-countdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  //getting basic data of all players\n  //const [data, setData] = useState([{}])\n  const [oldPrice, setOldPrice] = useState([{}]);\n  const playerID = 3; // useEffect(() => {\n  //   fetch(`/api/players/${playerID}/`).then(\n  //     res => res.json()\n  //   ).then(\n  //     data => {\n  //       setData(data)\n  //     }\n  //   )\n  // }, [playerID])\n  //could probably make this more efficient, try not to have two calls\n  //need to figure out how to make an immutable variable\n\n  useEffect(() => {\n    fetch(`/api/players/${playerID}/`).then(res => res.json()).then(oldPrice => {\n      setOldPrice(oldPrice);\n    });\n  }, [playerID]); //updating price of a player\n  // const [price, setPrice] = useState('')\n  // const handlePriceChange = (inputValue) => {\n  //   setPrice(inputValue)\n  // }\n  // const handleChange = (event) => {\n  //   handlePriceChange(event.target.value)\n  //   setData({...data, 'price':event.target.value})\n  //   console.log(data)\n  // }\n\n  const handleFormSubmit = (e, price, data) => {\n    e.preventDefault();\n    const isGreater = price > oldPrice.price;\n\n    if (isGreater) {\n      fetch(`/api/players/${playerID}/update/`, {\n        method: 'PUT',\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      }).then(res => res.json()).then(oldPrice => {\n        setOldPrice(oldPrice);\n      });\n    }\n  }; //to get a specific player\n  // fetch(`/api/notes/${noteId}/`)\n  //instead of empty list at the end of useEffect, pass in [noteId], this the dependency\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PlayerCard, {\n        player: oldPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        handleFormSubmit: handleFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Countdown, {\n        date: Date.now() + 20000\n      }, oldPrice.price, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"kDrixJM615a+BiNSX3miOzV4nMw=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","PlayerCard","TextInput","MDBBtn","Countdown","Home","oldPrice","setOldPrice","playerID","fetch","then","res","json","handleFormSubmit","e","price","data","preventDefault","isGreater","method","body","JSON","stringify","headers","Date","now"],"sources":["/Users/eligottlieb/Documents/GitHub/calcutta/client/src/pages/Home.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\n//import { Link } from \"react-router-dom\"; //look up react router dom for all the things you can import\nimport {PlayerCard} from '../components/PlayerCard'\nimport {TextInput} from '../components/TextInput'\nimport { MDBBtn } from 'mdb-react-ui-kit';\nimport Countdown from 'react-countdown'\n\nfunction Home() {\n\n  //getting basic data of all players\n\n  //const [data, setData] = useState([{}])\n  const [oldPrice, setOldPrice] = useState([{}])\n\n\n  const playerID = 3\n\n  // useEffect(() => {\n  //   fetch(`/api/players/${playerID}/`).then(\n  //     res => res.json()\n  //   ).then(\n  //     data => {\n  //       setData(data)\n  //     }\n  //   )\n  // }, [playerID])\n\n  //could probably make this more efficient, try not to have two calls\n  //need to figure out how to make an immutable variable\n  useEffect(() => {\n    fetch(`/api/players/${playerID}/`).then(\n      res => res.json()\n    ).then(\n      oldPrice => {\n        setOldPrice(oldPrice)\n      }\n    )\n  }, [playerID])\n\n    //updating price of a player\n  // const [price, setPrice] = useState('')\n  // const handlePriceChange = (inputValue) => {\n  //   setPrice(inputValue)\n  // }\n\n  // const handleChange = (event) => {\n  //   handlePriceChange(event.target.value)\n  //   setData({...data, 'price':event.target.value})\n  //   console.log(data)\n  // }\n\n  const handleFormSubmit = (e,price,data) => {\n  e.preventDefault()\n  const isGreater = (price > oldPrice.price)\n  if (isGreater) {\n  fetch(`/api/players/${playerID}/update/`, {\n    method: 'PUT',\n    body: JSON.stringify(\n      data\n    ),\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }).then(\n    res => res.json()\n  ).then(\n    oldPrice => {\n      setOldPrice(oldPrice)\n    }\n  )}\n}\n\n\n  //to get a specific player\n  // fetch(`/api/notes/${noteId}/`)\n  //instead of empty list at the end of useEffect, pass in [noteId], this the dependency\n\n\n  return (\n    <>\n      <div>\n          <PlayerCard player = {oldPrice}/>\n          {/* <form onSubmit={handleFormSubmit}>\n              <label>Enter a price:</label>\n              <input className=\"inp\" required value={price} onChange={handleChange} type=\"number\" name=\"price\" autoComplete=\"off\"/>\n              <input type=\"submit\" value=\"BID\" />\n          </form> */}\n          <TextInput handleFormSubmit={handleFormSubmit}/>\n          <Countdown date={Date.now() + 20000} key = {oldPrice.price}/>\n          {/* <MDBBtn onClick={handleFormSubmit(playerID)} color=\"amber\">\n              BID\n          </MDBBtn> */}\n      </div>\n    </>\n  )\n}\n  \n  export default Home"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC,C,CACA;;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SAAQC,SAAR,QAAwB,yBAAxB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EAEd;EAEA;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAxC;EAGA,MAAMS,QAAQ,GAAG,CAAjB,CARc,CAUd;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;;EACAR,SAAS,CAAC,MAAM;IACdS,KAAK,CAAE,gBAAeD,QAAS,GAA1B,CAAL,CAAmCE,IAAnC,CACEC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADT,EAEEF,IAFF,CAGEJ,QAAQ,IAAI;MACVC,WAAW,CAACD,QAAD,CAAX;IACD,CALH;EAOD,CARQ,EAQN,CAACE,QAAD,CARM,CAAT,CAtBc,CAgCZ;EACF;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;;EAEA,MAAMK,gBAAgB,GAAG,CAACC,CAAD,EAAGC,KAAH,EAASC,IAAT,KAAkB;IAC3CF,CAAC,CAACG,cAAF;IACA,MAAMC,SAAS,GAAIH,KAAK,GAAGT,QAAQ,CAACS,KAApC;;IACA,IAAIG,SAAJ,EAAe;MACfT,KAAK,CAAE,gBAAeD,QAAS,UAA1B,EAAqC;QACxCW,MAAM,EAAE,KADgC;QAExCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CACJN,IADI,CAFkC;QAKxCO,OAAO,EAAE;UACP,gBAAgB;QADT;MAL+B,CAArC,CAAL,CAQGb,IARH,CASEC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATT,EAUEF,IAVF,CAWEJ,QAAQ,IAAI;QACVC,WAAW,CAACD,QAAD,CAAX;MACD,CAbH;IAcE;EACH,CAnBC,CA5Cc,CAkEd;EACA;EACA;;;EAGA,oBACE;IAAA,uBACE;MAAA,wBACI,QAAC,UAAD;QAAY,MAAM,EAAIA;MAAtB;QAAA;QAAA;QAAA;MAAA,QADJ,eAOI,QAAC,SAAD;QAAW,gBAAgB,EAAEO;MAA7B;QAAA;QAAA;QAAA;MAAA,QAPJ,eAQI,QAAC,SAAD;QAAW,IAAI,EAAEW,IAAI,CAACC,GAAL,KAAa;MAA9B,GAA4CnB,QAAQ,CAACS,KAArD;QAAA;QAAA;QAAA;MAAA,QARJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAiBD;;GAxFQV,I;;KAAAA,I;AA0FP,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}