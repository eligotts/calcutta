{"ast":null,"code":"var _jsxFileName = \"/Users/eligottlieb/Documents/GitHub/calcutta/client/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //import { Link } from \"react-router-dom\"; //look up react router dom for all the things you can import\n\nimport { PlayerCard } from '../components/PlayerCard';\nimport { TextInput } from '../components/TextInput';\nimport { MDBBtn } from 'mdb-react-ui-kit';\nimport Countdown from 'react-countdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  //getting basic data of all players\n  //const [data, setData] = useState([{}])\n  const [oldPrice, setOldPrice] = useState([{}]);\n  const [playerID, setPlayerID] = useState(1);\n  const [numPlayers, setNumPlayers] = useState([{}]); //const playerID = 3\n  // useEffect(() => {\n  //   fetch(`/api/players/${playerID}/`).then(\n  //     res => res.json()\n  //   ).then(\n  //     data => {\n  //       setData(data)\n  //     }\n  //   )\n  // }, [playerID])\n\n  useEffect(() => {\n    fetch('/api/numplayers/').then(res => res.json()).then(numPlayers => {\n      setNumPlayers(numPlayers);\n    });\n  }, []); //could probably make this more efficient, try not to have two calls\n  //need to figure out how to make an immutable variable\n\n  useEffect(() => {\n    fetch(`/api/players/${playerID}/`).then(res => res.json()).then(oldPrice => {\n      setOldPrice(oldPrice);\n    });\n  }, [playerID]); //updating price of a player\n  // const [price, setPrice] = useState('')\n  // const handlePriceChange = (inputValue) => {\n  //   setPrice(inputValue)\n  // }\n  // const handleChange = (event) => {\n  //   handlePriceChange(event.target.value)\n  //   setData({...data, 'price':event.target.value})\n  //   console.log(data)\n  // }\n\n  const handleFormSubmit = data => {\n    if (data.price > oldPrice.price) {\n      fetch(`/api/players/${playerID}/update/`, {\n        method: 'PUT',\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      }).then(res => res.json()).then(oldPrice => {\n        setOldPrice(oldPrice);\n        console.log(oldPrice);\n      });\n    }\n  };\n\n  const handleTimerDone = () => {\n    if (playerID < numPlayers) {\n      setPlayerID(playerID + 1);\n    }\n  };\n\n  const renderer = _ref => {\n    let {\n      hours,\n      minutes,\n      seconds,\n      completed\n    } = _ref;\n\n    if (completed) {\n      // Render a completed state\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Times up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 12\n      }, this);\n    } else {\n      // Render a countdown\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 12\n      }, this);\n    }\n  };\n\n  useEffect(() => {\n    var socket = new WebSocket('ws://' + window.location.host + '/users/');\n    console.log(socket);\n\n    socket.onopen = e => {\n      console.log('open', e);\n    };\n\n    socket.onmessage = e => {\n      let data = JSON.parse(e.data);\n      console.log('Data:', data);\n    };\n  }); // const testSocket = () => {\n  //   // var socket = new WebSocket('ws://' + window.location.host + '/users/')\n  //   var socket = new WebSocket(`ws://${window.location.host}/ws/socket-server/`)\n  //   console.log(socket)\n  //   socket.onmessage = function(e){\n  //     let data = JSON.parse(e.data)\n  //     console.log('Data:',data)\n  //   }\n  // socket.onopen = function(event) {\n  //   console.log('WebSockets connection created.')\n  // }\n  // if (socket.readyState === WebSocket.OPEN) {\n  //   socket.onopen()\n  // }\n  //to get a specific player\n  // fetch(`/api/notes/${noteId}/`)\n  //instead of empty list at the end of useEffect, pass in [noteId], this the dependency\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PlayerCard, {\n        player: oldPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        handleFormSubmit: handleFormSubmit,\n        playerID: playerID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Countdown, {\n        date: Date.now() + 10000,\n        renderer: renderer,\n        onComplete: handleTimerDone\n      }, oldPrice.price, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"FSeDSvnHCkFhTBwOjhQml7foufw=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","PlayerCard","TextInput","MDBBtn","Countdown","Home","oldPrice","setOldPrice","playerID","setPlayerID","numPlayers","setNumPlayers","fetch","then","res","json","handleFormSubmit","data","price","method","body","JSON","stringify","headers","console","log","handleTimerDone","renderer","hours","minutes","seconds","completed","socket","WebSocket","window","location","host","onopen","e","onmessage","parse","Date","now"],"sources":["/Users/eligottlieb/Documents/GitHub/calcutta/client/src/pages/Home.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\n//import { Link } from \"react-router-dom\"; //look up react router dom for all the things you can import\nimport {PlayerCard} from '../components/PlayerCard'\nimport {TextInput} from '../components/TextInput'\nimport { MDBBtn } from 'mdb-react-ui-kit';\nimport Countdown from 'react-countdown'\n\nfunction Home() {\n\n  //getting basic data of all players\n\n  //const [data, setData] = useState([{}])\n  const [oldPrice, setOldPrice] = useState([{}])\n  const [playerID, setPlayerID] = useState(1)\n  const [numPlayers, setNumPlayers] = useState([{}])\n\n\n  //const playerID = 3\n\n  // useEffect(() => {\n  //   fetch(`/api/players/${playerID}/`).then(\n  //     res => res.json()\n  //   ).then(\n  //     data => {\n  //       setData(data)\n  //     }\n  //   )\n  // }, [playerID])\n\n  useEffect(() => {\n    fetch('/api/numplayers/').then(\n      res => res.json()\n    ).then(\n      numPlayers => {\n        setNumPlayers(numPlayers)\n      }\n    )\n  }, [])\n\n  //could probably make this more efficient, try not to have two calls\n  //need to figure out how to make an immutable variable\n  useEffect(() => {\n    fetch(`/api/players/${playerID}/`).then(\n      res => res.json()\n    ).then(\n      oldPrice => {\n        setOldPrice(oldPrice)\n      }\n    )\n  }, [playerID])\n\n    //updating price of a player\n  // const [price, setPrice] = useState('')\n  // const handlePriceChange = (inputValue) => {\n  //   setPrice(inputValue)\n  // }\n\n  // const handleChange = (event) => {\n  //   handlePriceChange(event.target.value)\n  //   setData({...data, 'price':event.target.value})\n  //   console.log(data)\n  // }\n\n  const handleFormSubmit = (data) => {\n  if (data.price > oldPrice.price) {\n  fetch(`/api/players/${playerID}/update/`, {\n    method: 'PUT',\n    body: JSON.stringify(\n      data\n    ),\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }).then(\n    res => res.json()\n  ).then(\n    oldPrice => {\n      setOldPrice(oldPrice)\n      console.log(oldPrice)\n    }\n  )}}\n\n\nconst handleTimerDone = () => {\n  if (playerID < numPlayers) {\n    setPlayerID(playerID + 1)\n  }\n}\n\nconst renderer = ({ hours, minutes, seconds, completed }) => {\n  if (completed) {\n    // Render a completed state\n    return <p>Times up!</p>\n  } else {\n    // Render a countdown\n    return <span>{seconds}</span>;\n  }\n}\n\nuseEffect(() => {\n  var socket = new WebSocket('ws://' + window.location.host + '/users/')\n  console.log(socket)\n  socket.onopen = e => {\n    console.log('open', e)\n  }\n  socket.onmessage = e => {\n    let data = JSON.parse(e.data)\n    console.log('Data:',data)\n  }\n})\n\n// const testSocket = () => {\n//   // var socket = new WebSocket('ws://' + window.location.host + '/users/')\n//   var socket = new WebSocket(`ws://${window.location.host}/ws/socket-server/`)\n\n//   console.log(socket)\n\n//   socket.onmessage = function(e){\n//     let data = JSON.parse(e.data)\n//     console.log('Data:',data)\n//   }\n\n  // socket.onopen = function(event) {\n  //   console.log('WebSockets connection created.')\n  // }\n\n  // if (socket.readyState === WebSocket.OPEN) {\n  //   socket.onopen()\n  // }\n\n\n\n  //to get a specific player\n  // fetch(`/api/notes/${noteId}/`)\n  //instead of empty list at the end of useEffect, pass in [noteId], this the dependency\n\n\n  return (\n    <>\n      <div>\n          {/* <script type='text/javascript'>\n            let socket = new WebSocket(`ws://${window.location.host}/ws/socket-server/`)\n\n            console.log(socket)\n\n            socket.onmessage = function(e) {\n              let data = JSON.parse(e.data)\n              console.log('Data:',data)\n            }\n          </script> */}\n          <PlayerCard player = {oldPrice}/>\n          {/* <form onSubmit={handleFormSubmit}>\n              <label>Enter a price:</label>\n              <input className=\"inp\" required value={price} onChange={handleChange} type=\"number\" name=\"price\" autoComplete=\"off\"/>\n              <input type=\"submit\" value=\"BID\" />\n          </form> */}\n          <TextInput handleFormSubmit={handleFormSubmit} playerID={playerID}/>\n          <Countdown date={Date.now() + 10000} key = {oldPrice.price} renderer={renderer} onComplete={handleTimerDone}/>\n          {/* <MDBBtn onClick={handleFormSubmit(playerID)} color=\"amber\">\n              BID\n          </MDBBtn> */}\n          {/* <button onClick={testSocket}>Test WebSocket</button> */}\n      </div>\n    </>\n  )\n}\n  \n  export default Home"],"mappings":"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"},"metadata":{},"sourceType":"module"}